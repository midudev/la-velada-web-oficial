---
import LiteYouTube from './LiteYouTube.astro'
import SectionTitle from './SectionTitle.astro'

interface VideoItem {
  videoID: string
  thumbnail: string
} 

interface Props {
  workout?: VideoItem[]
}

const { workout = undefined } = Astro.props
const hasWorkout = workout !== undefined
const videoCount = workout?.length || 0
---
{hasWorkout && (
<section class="mx-auto my-8 md:my-16 lg:my-36 max-w-6xl px-4 md:px-6 lg:px-10">
  <div class="text-dark-magenta text-center pb-6 md:pb-12">
    <SectionTitle title="Entrenamiento" />
    <p class="mt-3 md:mt-5 text-lg md:text-xl uppercase">Preparación para el combate</p>
  </div>
  {hasWorkout && videoCount === 1 ? (
    <div class="mt-6 md:mt-10  px-2 md:px-4">
      <LiteYouTube videoId={workout[0].videoID} backgroundImage={workout[0].thumbnail} />
    </div>
  ) : ( 
    <div class="relative max-w-[1000px] mx-auto">
      <div class="md:hidden mt-6 pt-6 px-2">
        {workout && workout.length > 0 && (
          <LiteYouTube videoId={workout[0].videoID} backgroundImage={workout[0].thumbnail} />
        )}
      </div>
      <div class="hidden md:block">
        <Fragment client:load>
          <div id="carousel" class="relative h-[320px] overflow-hidden">
            {(workout ?? []).map((video, index) => (
              <div class="absolute transition-all duration-500 video-box" data-index={index}>
                <LiteYouTube videoId={video.videoID} backgroundImage={video.thumbnail} />
              </div>
            ))}
          </div>
          <div class="flex justify-center gap-4 mt-6">
            <button class="text-3xl px-4 py-2 cursor-pointer bg-pink-500 bg-opacity-50 text-white rounded-full hover:bg-opacity-70" onclick="carouselNext()">←</button>
            <button class="text-3xl px-4 py-2 cursor-pointer bg-pink-500 bg-opacity-50 text-white rounded-full hover:bg-opacity-70" onclick="carouselPrev()">→</button>
          </div>
        </Fragment>
      </div>
    </div>
  )}
</section>
)}

<style>
  .video-box {
    width: 200px;
    height: 120px;
    opacity: 0.4;
    z-index: 1;
    transition: all 0.5s ease;
  }

  .video-box.active {
    width: 500px;
    height: 280px;
    opacity: 1;
    z-index: 3;
  }

  .video-box.prev {
    width: 300px;
    height: 170px;
    opacity: 0.7;
    z-index: 2;
    left: 100px !important;
  }

  .video-box.next {
    width: 300px;
    height: 170px;
    opacity: 0.7;
    z-index: 2;
    left: 600px !important;
  }

  .video-box.far-prev {
    left: 0 !important;
  }

  .video-box.far-next {
    left: 850px !important;
  }
</style>

<script is:inline>
  document.addEventListener('DOMContentLoaded', () => {
    const videos = Array.from(document.querySelectorAll('.video-box'));
    let currentIndex = 0;
    
    function updateCarousel() {
      videos.forEach((video, index) => {
        // Reset all classes
        video.className = 'absolute transition-all duration-500 video-box';
        
        // Calculate relative position
        let relativePos = index - currentIndex;
        const totalVideos = videos.length;
        
        // Handle wrapping for circular carousel
        if (relativePos > Math.floor(totalVideos/2)) relativePos -= totalVideos;
        if (relativePos < -Math.floor(totalVideos/2)) relativePos += totalVideos;
        
        // Position elements
        if (relativePos === 0) {
          // Center (active) item
          video.classList.add('active');
          video.style.left = '250px';
        } else if (relativePos === -1) {
          // Previous item
          video.classList.add('prev');
          video.style.left = '100px';
        } else if (relativePos === 1) {
          // Next item
          video.classList.add('next');
          video.style.left = '600px';
        } else if (relativePos === -2) {
          // Far previous item
          video.classList.add('far-prev');
          video.style.left = '0';
        } else if (relativePos === 2) {
          // Far next item
          video.classList.add('far-next');
          video.style.left = '850px';
        } else {
          // Hide other items
          video.style.display = 'none';
        }
      });
    }
    
    window.carouselPrev = () => {
      currentIndex = (currentIndex - 1 + videos.length) % videos.length;
      updateCarousel();
    };
    
    window.carouselNext = () => {
      currentIndex = (currentIndex + 1) % videos.length;
      updateCarousel();
    };
    
    // Initialize
    updateCarousel();
  });
</script>