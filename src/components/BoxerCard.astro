---
const { id, name, class: extraClass } = Astro.props

interface Props {
  id: string
  name: string
  class: string
}
---

<a
  class={`boxer-card ${extraClass} inline-block transition-all w-10 sm:w-14 md:w-16 lg:w-24 xl:w-26 group relative rounded-lg overflow-hidden duration-300 hover:scale-110 hover:shadow-lg hover:z-20`}
  href={`/luchador/${id}`}
  data-id={id}
>
  <div class="relative overflow-hidden">
    <img
      class="aspect-[900/1200] h-full w-full object-cover transition-transform duration-500 group-hover:scale-110"
      src={`/images/fighters/cards/${id}.webp`}
      alt={`Tarjeta del boxeador ${name}`}
    />

    <div
      class="absolute inset-0 -translate-x-full bg-gradient-to-tr from-transparent via-white/20 to-transparent transition-transform duration-700 ease-in-out group-hover:translate-x-full"
    >
    </div>

    <div
      class="border-theme-tickle-me-pink/70 absolute inset-0 rounded-lg border-0 opacity-0 transition-all duration-300 group-hover:border-2 group-hover:opacity-100"
    >
    </div>
  </div>

  <div
    class="absolute inset-0 flex translate-y-2 flex-col items-center justify-end bg-gradient-to-t from-pink-950/90 via-pink-950/40 to-transparent p-2 opacity-0 transition-all duration-300 group-hover:translate-y-0 group-hover:opacity-100"
  >
    <h3
      class="text-theme-tickle-me-pink text-sm font-normal tracking-wide lowercase drop-shadow-[0_1px_2px_rgba(0,0,0,0.8)]"
    >
      {name}
    </h3>
  </div>

  <div
    class="bg-theme-tickle-me-pink absolute -bottom-1 left-1/2 h-1 w-0 -translate-x-1/2 transform rounded-t-md transition-all duration-300 group-hover:w-2/3"
  >
  </div>
</a>

<style>
  .boxer-left {
    clip-path: polygon(0% 0%, 95% 0%, 100% 100%, 5% 100%);
  }

  .boxer-right {
    clip-path: polygon(5% 0%, 100% 0%, 95% 100%, 0% 100%);
  }

  @media (prefers-reduced-motion) {
    .boxer-card,
    .boxer-card:hover,
    .boxer-card img,
    .boxer-card div {
      transition: opacity 0.3s ease !important;
      transform: none !important;
    }
  }
</style>

<script>
  document.addEventListener('astro:page-load', () => {
    const boxerCards = document.querySelectorAll('.boxer-card')
    let timeoutId: number | null = null

    const pairings: Record<number, number> = {
      0: 5,
      1: 4,
      2: 3,
      6: 13,
      7: 12,
      8: 11,
      9: 10,
      5: 0,
      4: 1,
      3: 2,
      13: 6,
      12: 7,
      11: 8,
      10: 9,
    }

    boxerCards.forEach((singleBoxerCard, index) => {
      singleBoxerCard.addEventListener('mouseenter', () => {
        if (timeoutId) {
          clearTimeout(timeoutId)
          timeoutId = null
        }

        const id = singleBoxerCard.getAttribute('data-id')
        if (id) {
          // Dispatch a custom event to notify a boxer card id is hovered
          const event = new CustomEvent('boxer-card-hovered', {
            detail: { id },
          })
          document.dispatchEvent(event)
        }
        // Aplicar la clase 'grayscale-100' a todas las tarjetas
        boxerCards.forEach((card) => card.classList.add('grayscale-100'))

        // Quitar la clase solo de la tarjeta sobre la que se está haciendo hover
        singleBoxerCard.classList.remove('grayscale-100')

        // Quitar la clase también de su par si existe
        if (pairings[index] !== undefined) {
          boxerCards[pairings[index]].classList.remove('grayscale-100')
        }
      })

      singleBoxerCard.addEventListener('mouseleave', () => {
        timeoutId = setTimeout(() => {
          const event = new CustomEvent('boxer-card-exit')
          document.dispatchEvent(event)
        }, 500)

        // Restaurar la clase en todas las tarjetas cuando el mouse salga
        boxerCards.forEach((card) => card.classList.remove('grayscale-100'))
      })

      singleBoxerCard.addEventListener('focus', () => {
        const id = singleBoxerCard.getAttribute('data-id')
        if (id) {
          const event = new CustomEvent('boxer-card-hovered', {
            detail: { id },
          })
          document.dispatchEvent(event)
        }
      })

      singleBoxerCard.addEventListener('blur', () => {
        timeoutId = setTimeout(() => {
          const event = new CustomEvent('boxer-card-exit')
          document.dispatchEvent(event)
        }, 500)
      })
    })
  })
</script>
