---
import BoxerCard from '@/components/BoxerCard.astro'
import BoxerBigImages from '@/components/Boxers/BoxerBigImages.astro'
import ColumnBoxers from '@/components/Boxers/ColumnBoxers.astro'
import type { Fighters } from '@/types/fighters'

interface Props {
  boxers: Fighters[]
  selectedBoxer: Fighters
}

const { boxers, selectedBoxer } = Astro.props

const firstRow = boxers.slice(0, 6)
const leftRow = firstRow.slice(0, 3)
const rightRow = firstRow.slice(3)

const secondRow = boxers.slice(6)
const leftSecondRow = secondRow.slice(0, 4)
const rightSecondRow = secondRow.slice(4, 8)

const animationDelay = [500, 700, 800]
const reverseDelay = [...animationDelay].reverse()

const animationDelaySecondRow = [...animationDelay, 900]
const reverseDelaySecondRow = [...animationDelaySecondRow].reverse()
---

<BoxerBigImages boxers={boxers} />

<div
  id="fighters-selection-container"
  class="relative flex h-full w-full max-w-6xl flex-col items-center justify-end gap-8 sm:p-4"
>
  <div class="hidden w-full flex-wrap justify-center gap-4 px-0 sm:justify-between sm:px-4 md:flex">
    <div class="flex flex-wrap justify-start gap-4">
      {
        leftRow.map(({ id, name, versus }, index) => (
          <div
            class={`animate-fade-in-right animate-duration-slower animate-delay-${animationDelay[index]}`}
          >
            <BoxerCard id={id} name={name} class="boxer-left" versus={versus} />
          </div>
        ))
      }
    </div>

    <div class="hidden flex-wrap justify-end gap-4 md:flex">
      {
        rightRow.map(({ id, name, versus }, index) => (
          <div
            class={`animate-fade-in-left animate-duration-slower animate-delay-${reverseDelay[index]}`}
          >
            <BoxerCard id={id} name={name} class="boxer-right" versus={versus} />
          </div>
        ))
      }
    </div>
  </div>

  <div class="hidden flex-wrap justify-center gap-4 sm:justify-between md:flex">
    <div class="flex flex-wrap justify-start gap-4">
      {
        leftSecondRow.map(({ id, name, versus }, index) => (
          <div class={`animate-fade-in-up animate-delay-${animationDelaySecondRow[index]}`}>
            <BoxerCard id={id} name={name} class="boxer-left" versus={versus} />
          </div>
        ))
      }
    </div>
    <div class="hidden flex-wrap justify-end gap-4 md:flex">
      {
        rightSecondRow.map(({ id, name, versus }, index) => (
          <div class={`animate-fade-in-up animate-delay-${reverseDelaySecondRow[index]}`}>
            <BoxerCard id={id} name={name} class="boxer-right" versus={versus} />
          </div>
        ))
      }
    </div>
  </div>
</div>
<div class="-mt-20 flex flex-col items-center justify-center md:mt-32 md:hidden">
  <div class="carousel mt-8 w-full max-w-[100vw] overflow-y-hidden overflow-x-scroll">
    <div
      class="carousel-inner flex snap-x snap-mandatory overflow-y-hidden overflow-x-scroll pr-[40%]"
    >
      {
        boxers.map((boxer, index) => (
          <div
            class:list={`carousel-item w-[70%] flex-shrink-0 snap-center px-2 ${index === 0 ? 'ml-[65%]' : ''} `}
          >
            <ColumnBoxers boxers={[boxer]} selectedBoxer={selectedBoxer} />
          </div>
        ))
      }
    </div>
  </div>
</div>
